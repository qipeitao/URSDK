using System;
using System.Collections.Generic;
using System.Text;

namespace URSdk
{
   public enum PortType:int
    {
        /// <summary>
        /// Dashboard 接口是由机器人人机界面进程（示教器显示）负责维护和执行的一个端
        /// 口。该端口主要负责接收上位机指令， 执行 机器人 初始化 、 加载程序、 开始和 暂停程序
        /// 运行 以及 设置用户角色等操作，上位机可以远程操作机器人就如同操作示教器一样。
        /// 该接口主要应用在自动启动机器人，无示教器应用（无示教器情况下如何设置 UR 机器
        /// 人请参考无示教器设置）等场合
        /// </summary>
        Dashboard =29999,
        /// <summary>
        /// Primary & Secondary 接口由机器人控制进程维护和执行的端口。开机后，机器人
        /// 一直从这两个端口以 10Hz 频率对外发送机器人的状态信息（机器人位置，IO，运行状
        /// 态等），除此之外 Primary 端口还会发送一些全局变量更新等信息
        /// 最新的貌似是500hz
        /// </summary>
        Primary = 30001,
        Secondary= 30002,
        /// <summary>
        /// Realtime 通讯接口始终以 125Hz 的频率往外发送机器人的详细状态信息（位置，
        /// 速度，关节电流，力矩等），同时也可以接收上位机发送的脚本指令（脚本指令的发送
        /// 规则参考 Primary & Secondary（30001 & 30002）接口介绍中相应部分）并立即执行 
        /// </summary>
        Realtime =30003,
        /// <summary>
        ///  Realtime Data Exchange，RTDE 接口需由上位机进行配置，并根据配置
        ///  以 125Hz 的频率往外发送机器人的详细状态信息（位置，速度，关节电流，力矩等），
        ///  机器人也只会接收配置的输入信息（IO，寄存器等）。
        ///  与 Realtime 接口相比，RTDE 接口不能接收脚本指令，只能接收配置好的输入信
        ///  息；但是 RTDE 接口不会中断当前程序的执行，而且与输入输出信息都是经过配置，传
        ///  输的信息没有不需要的数据，可以按需启动和停止，因此能够大大降低对网络带宽的占
        ///  用。
        /// </summary>
        RTDE = 30004,
    }
}
